import pygame
import time
import random
pygame.font.init() # Initialized pygame and fonts

WIDTH,HEIGHT = 1000,800 # Setting the measurements ofand creeating the window.
                        
WIN = pygame.display.set_mode((WIDTH,HEIGHT))
pygame.display.set_caption("SPACE DODGE")  #window title

# Loading and scaling the background image.
BG = pygame.transform.scale(pygame.image.load("bg.jpeg.jpg"),(WIDTH,HEIGHT))

# speed,width,height of player and star.
PLAYER_WIDTH = 40
PLAYER_HEIGHT = 60
PLAYER_VEL = 5
FONT = pygame.font.SysFont("comicsans",30)
STAR_WIDTH = 10
STAR_HEIGHT = 20
STAR_VEL = 3

def draw(player,elapsed_time,stars):
    WIN.blit(BG,(0,0))

    time_text = FONT.render(f"Time: {round(elapsed_time)}s",1,"white")
    WIN.blit(time_text,(10,10)) #outputting elapsed time
    
    pygame.draw.rect(WIN,"#ffeead",player) #player:rectangle

    for star in stars:
        pygame.draw.rect(WIN, "white",star) 

    pygame.display.update() # Updated the display to show the new frame

def main():
    run = True

    player = pygame.Rect(200, HEIGHT-PLAYER_HEIGHT,PLAYER_WIDTH,PLAYER_HEIGHT)
    clock = pygame.time.Clock() #controls the frame rate
    start_time = time.time()  
    elapsed_time = 0 # tracks start time to display max time played

    star_add_increment  = 2000 # star added after time interval
    star_count = 0 # counts time passed since last star addition

    stars = []
    hit = False
# game loop
    while run:
            star_count += clock.tick(60)
            elapsed_time = time.time() - start_time

            # Adding new stars to the game at intervals
            if star_count > star_add_increment:
                for _ in range(3):
                    star_x = random.randint(0,WIDTH-STAR_WIDTH)
                    star = pygame.Rect(star_x, -STAR_HEIGHT,STAR_WIDTH,STAR_HEIGHT)
                    stars.append(star)
            # Decreased the interval for adding stars and reset star_count
                star_add_increment = max(200,star_add_increment - 50)
                star_count = 0      

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    run = False
                    break
            # moving rectangle based on appropriate keyboard arrow press            
            keys = pygame.key.get_pressed()
            if keys[pygame.K_LEFT] and player.x - PLAYER_VEL >=0:
                player.x -= PLAYER_VEL
            if keys[pygame.K_RIGHT] and player.x + PLAYER_VEL + player.width <=WIDTH:
                player.x += PLAYER_VEL 

            # Moved the stars and checked for collisions
            for star in stars[:]:
                star.y += STAR_VEL
                if star.y > HEIGHT:
                    stars.remove(star)
                elif star.y + star.height >= player.y and star.colliderect(player):
                    stars.remove(star)
                    hit = True # player hit
                    break  # loop is terminated
                   
            if hit: # message shown if player is hit.     
                lost_text = FONT.render("you lost Sir!", 1,"white")
                WIN.blit(lost_text, (WIDTH/2 - lost_text.get_width()/2, HEIGHT/2-lost_text.get_height()/2))
                pygame.display.update()
                pygame.time.delay(4000)
                break         

            draw(player,elapsed_time,stars)    

    pygame.quit()        

if __name__ == "__main__":
    main()    
