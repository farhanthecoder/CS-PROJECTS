#MADE A GAMEBOARD
def display_board(board):
    print(board[7]+"|"+board[8]+"|"+board[9])
    print("-----")
    print(board[4]+"|"+board[5]+"|"+board[6])
    print("-----")
    print(board[1]+"|"+board[2]+"|"+board[3])
    


def player_input():
    flag=False
    while flag==False:
        myinput=input("pls enter a marker X or O:", )
        if myinput =="X" or myinput=="O":
            flag=True
        else:
            print('wrong input.....try again')
    return myinput

#Step 3: Write a function that takes in the board list object,
# a marker ('X' or 'O'), and a desired position (number 1-9) and assigns it to the board.
def place_marker(board, marker, position):
    while position<1 or position>9:
        newinput=int(input("pls enter a valid position: "))
        position=newinput
    board[position]=marker





#Step 4: Write a function that takes
#in a board and a mark (X or O) and then checks to see if that mark has won. **
def win_check(board, mark):
    if (board[1]==mark and board[2]==mark and board[3]==mark) or (board[4]==mark and board[5]==mark and board[6]==mark )or(board[7]==mark and board[8]==mark and board[9]==mark )or(board[7]==mark and board[5]==mark and board[3]==mark )or(board[1]==mark and board[5]==mark and board[9]==mark )or(board[7]==mark and board[4]==mark and board[1]==mark )or(board[8]==mark and board[5]==mark and board[2]==mark )or(board[9]==mark and board[6]==mark and board[2]==mark ):
        return True
    else:
        return False
    
#Step 5: Write a function that uses the random module to randomly decide which player goes first.
# You may want to lookup random.randint() Return a string of which player went first.

import random

def choose_first():
    myrandomnumber=random.randint(1,2)
    if myrandomnumber==1:
        return "player1"
    else:
        return "player2"
#Step 6: Write a function that returns a boolean indicating
# whether a space on the board is freely available.

def space_check(board, position):
    if board[position]!= " ":
        return False
    else: return True

#Step 7: Write a function that checks
#if the board is full and returns a boolean value. True if full, False otherwise.
    
def full_board_check(board):
    flag=True
    for i in range(1,10):
        if space_check(board,i)==True:
            #jodi ektao space thake then full_board_check false hobe
            #as board e moddhe ekhono space ase
            flag= False
    return flag

#Step 8: Write a function that asks for a player's next position (as a number 1-9) and 
#then uses the function from step 6 to check if it's a free position. 
#If it is, then return the position for later use.
        
def player_choice(board):
    flag=False
    while flag==False:
        nextposition=int(input("enter the next position between 1-9"))
        if nextposition>=1 and nextposition<10:
            flag=True
            x=space_check(board,nextposition)
            while not x:
             nextposition=int(input("this position is already filled. enter a new position 1-9"))
             x=space_check(board,nextposition)
    return nextposition           

    
#Step 9: Write a function that asks the player 
#if they want to play again and returns a boolean True if they do want to play again.       
def replay():
    choice=int("wanna play again? Hit Y or N " )
    if choice.lower()=='y':
        return True
    else:
        return False

play=True 
while play==True:
    print('Welcome to Tic Tac Toe!')
    playon=True
    myboard=[" "]*10
    player1_marker=player_input()
    player2_marker=player_input()
    turn=choose_first()
    print(turn+" will go first")
    play_game=input('are you ready to play?hit "Y" OR "N" ')
    if play_game.lower()[0]=='y':
        game_on=True
    else:
        game_on=False
    #c)Place their input on the board.
    #d)Check if the game is won,tied, lost, or ongoing.
    #repeat c and d until the game has been won or tied.
    while game_on:
        if turn=="player1":
            display_board(myboard)
            thisposition=player_choice(myboard)
            place_marker(myboard,player1_marker,thisposition)
            if win_check(myboard,player1_marker):
                print("player1 has won!")
                game_on=False
            else:
                if full_board_check(myboard):
                    display_board(myboard)
                    print("the game is a draw!")
                    break
                else:
                    turn="player2"
        else:
            display_board(myboard)
            thisposition=player_choice(myboard)
            place_marker(myboard,player2_marker,thisposition)
            if win_check(myboard,player2_marker):
                print("player2 has won")
                game_on=False
            else:
                if full_board_check(myboard):
                    display_board(myboard)
                    print("the game is a draw bro")
                else:
                    turn="player1"
    play=replay
    if play==False:
        break
